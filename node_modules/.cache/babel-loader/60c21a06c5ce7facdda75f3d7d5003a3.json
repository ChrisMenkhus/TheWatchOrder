{"ast":null,"code":"var _jsxFileName = \"/home/toad/Documents/react-projects/my-tabletop-hero/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; //-------------------//\n\nimport { createStore } from 'redux'; //ACTION -> THE ACTION THAT IS CALLED ON THE STATE (returns an object)\n\nconst increment = () => {\n  return {\n    type: 'INCREMENT'\n  };\n};\n\nconst decrement = () => {\n  return {\n    type: 'DECREMENT'\n  };\n}; //REDUCER -> MODIFYS THE STORE BASED ON THE ACTION\n\n\nconst counter = (state = 0, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n\n    case 'DECREMENT':\n      return state - 1;\n\n    default:\n      return state;\n  }\n}; //STORE -> GLOBALIZED STATE\n\n\nlet store = createStore(counter, store); //Display\n\nstore.subscribe(() => console.log(store.getState())); //DISPATCH -> CALLS AN ACTION ON THE REDUCER WHICH UPDATES THE STORE\n\nstore.dispatch(increment());\nstore.dispatch(increment());\nstore.dispatch(increment());\nstore.dispatch(increment());\nstore.dispatch(increment()); //--------------------//\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/toad/Documents/react-projects/my-tabletop-hero/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","increment","type","decrement","counter","state","action","store","subscribe","console","log","getState","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CACA;;AACA,SAAQC,WAAR,QAA0B,OAA1B,C,CAIA;;AACA,MAAMC,SAAS,GAAG,MAAM;AACvB,SAAO;AACNC,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA,CAJD;;AAKA,MAAMC,SAAS,GAAG,MAAM;AACvB,SAAO;AACND,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA,CAJD,C,CAMA;;;AACA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AACtC,UAAOA,MAAM,CAACJ,IAAd;AACC,SAAK,WAAL;AACC,aAAOG,KAAK,GAAG,CAAf;;AACD,SAAK,WAAL;AACC,aAAOA,KAAK,GAAG,CAAf;;AACD;AAAS,aAAOA,KAAP;AALV;AAOA,CARD,C,CAUA;;;AACA,IAAIE,KAAK,GAAGP,WAAW,CAACI,OAAD,EAAUG,KAAV,CAAvB,C,CAEA;;AACAA,KAAK,CAACC,SAAN,CAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ,CAAtB,E,CAEA;;AACAJ,KAAK,CAACK,QAAN,CAAeX,SAAS,EAAxB;AACAM,KAAK,CAACK,QAAN,CAAeX,SAAS,EAAxB;AACAM,KAAK,CAACK,QAAN,CAAeX,SAAS,EAAxB;AACAM,KAAK,CAACK,QAAN,CAAeX,SAAS,EAAxB;AACAM,KAAK,CAACK,QAAN,CAAeX,SAAS,EAAxB,E,CAKA;;AACAJ,QAAQ,CAACgB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAhB,aAAa,CAACiB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//-------------------//\nimport {createStore} from 'redux';\n\n\n\n//ACTION -> THE ACTION THAT IS CALLED ON THE STATE (returns an object)\nconst increment = () => {\n\treturn {\n\t\ttype: 'INCREMENT'\n\t}\n}\nconst decrement = () => {\n\treturn {\n\t\ttype: 'DECREMENT'\n\t}\n}\n\n//REDUCER -> MODIFYS THE STORE BASED ON THE ACTION\nconst counter = (state = 0, action) => {\n\tswitch(action.type) {\n\t\tcase 'INCREMENT':\n\t\t\treturn state + 1;\n\t\tcase 'DECREMENT':\n\t\t\treturn state - 1;\n\t\tdefault: return state;\n\t}\n}\n\n//STORE -> GLOBALIZED STATE\nlet store = createStore(counter, store);\n\n//Display\nstore.subscribe(() => console.log(store.getState()))\n\n//DISPATCH -> CALLS AN ACTION ON THE REDUCER WHICH UPDATES THE STORE\nstore.dispatch(increment());\nstore.dispatch(increment());\nstore.dispatch(increment());\nstore.dispatch(increment());\nstore.dispatch(increment());\n\n\n\n\n//--------------------//\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}